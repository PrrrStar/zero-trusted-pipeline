name: build

on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PRRRSTAR_GITHUB_PAT }}
          submodules: recursive
          fetch-depth: 5
      - name: Get commit sha
        id: get_sha_short
        run: echo "sha_short=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT
        shell: bash
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: projects/${secrets.GCP_PROJECT}/locations/global/workloadIdentityPools/the-workload-pool/providers/the-provider
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      - uses: RafikFarhad/push-to-gcr-github-action@v5-beta
        with:
          # gcloud_service_key: ${{ secrets.GCLOUD_SERVICE_KEY }} # can be base64 encoded or plain text || not needed if you use google-github-actions/auth
          registry: gcr.io
          project_id: ${{ secrets.GCP_PROJECT }}
          image_name: atlantis
          image_tag: latest,v1
          dockerfile: ./atlantis
          context: ./atlantis
    outputs:
      image_version: ${{ steps.get_sha_short.outputs.sha_short }}
  update-version:
    name: Update helm chart image version
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Version Check
        run: |
          echo ${{ needs.build.outputs.image_version }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: "main"
          token: ${{ secrets.PRRRSTAR_GITHUB_PAT }}
      - name: Update Chart Version
        run: |
          yq e --inplace '.image.tag = "${{ needs.build.outputs.image_version }}"' charts/atlantis/values.yaml
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.PRRRSTAR_GITHUB_PAT }}
          author: prrrstar <jmeef0802@gmail.com>
          commit-message: "update image version: ${{ needs.build.outputs.image_version }}"
          base: main
          branch: update-image-version-${{ needs.build.outputs.image_version }}
          title: '[AutoMerge] Image Version Update'
          body: |
            # Service
            ${{ env.SERVICE_LIST }}
            
            ## Update Image Version
             - *${{ needs.build.outputs.image_version }}*
          labels: |
            automerge
