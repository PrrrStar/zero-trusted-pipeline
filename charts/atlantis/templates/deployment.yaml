kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      volumes:
        - name: {{ .Values.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.name }}
      containers:
        - name: atlantis
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: GH_USER
              value: {{ .Values.env.ghUser }}
            - name: GH_TOKEN
              value: {{ .Values.env.ghToken }}
            - name: GH_WEBHOOK_SECRET
              value: {{ .Values.env.ghWebhookSecret }}
            - name: ATLANTIS_DATA_DIR
              value: /atlantis-data
            - name: URL
              value: {{ .Values.env.url }}
            - name: REPO_ALLOWLIST
              value: {{ .Values.env.allowRepository }}
            - name: PORT
              value: "4141"
          volumeMounts:
            - name: {{ .Values.name }}
              mountPath: /atlantis-data
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: "/"
              port: 4141
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 3
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: "/"
              port: 4141
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 2
          securityContext:
            privileged: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      serviceAccountName: {{ .Values.name }}
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: Recreate
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
